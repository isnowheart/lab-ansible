- name: Creating Security Group.
  local_action:
    module: ec2_group
    name: "{{ sec_group_name }}"
    description: sg for lab-k8s
    profile: "{{ aws_profile }}"
    region: "{{ region }}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: SSH
    - proto: tcp
      from_port: 2379
      to_port: 2380
      cidr_ip: 0.0.0.0/0
      rule_desc: etcd server API
    - proto: tcp
      from_port: 6443
      to_port: 6443
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-apiserver
    - proto: tcp
      from_port: 10250
      to_port: 10250
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API
    - proto: tcp
      from_port: 10251
      to_port: 10251
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-scheduler
    - proto: tcp
      from_port: 10252
      to_port: 10252
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet-controller-manager
    - proto: tcp
      from_port: 10255
      to_port: 10255
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API Read-Only
    - proto: tcp
      from_port: 30000
      to_port: 32767
      cidr_ip: 0.0.0.0/0
      rule_desc: NodePort Services
    - proto: tcp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet
    - proto: udp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: Weavenet
    - proto: udp
      from_port: 6784
      to_port: 6784
      cidr_ip: 0.0.0.0/0
      rule_desc: Weavenet
    - proto: tcp
      from_port: 32222
      to_port: 32222
      cidr_ip: 0.0.0.0/0
      rule_desc: GiropopsApp
    - proto: tcp
      from_port: 32111
      to_port: 32111
      cidr_ip: 0.0.0.0/0
      rule_desc: GiropopsAppProm
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Creating Instance EC2.
  local_action: ec2
    group="{{ sec_group_name }}"
    instance_type="{{ instance_type }}"
    image="{{ image }}"
    profile="{{ aws_profile }}"
    wait=true
    region="{{ region }}"
    key_name="{{ keypair }}"
    count="{{ count }}"
  register: ec2

- name: Adding the instance to the temp inventory.
  add_host: name={{ item.private_ip }} groups=lab-ansible-new
  loop: "{{ ec2.instances }}"

- name: Adding the Public IP of created instance to the hosts file.
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.public_ip }}
    insertafter="[k8sPublic]" line={{ item.public_ip }}
  loop: "{{ ec2.instances }}"

- name: Adding the Private IP of created instance to the hosts file.
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.private_ip }}
    insertafter="[k8sPrivate]" line={{ item.private_ip }}
  loop: "{{ ec2.instances }}"

- name: Awaiting SSH
  local_action: wait_for
    host={{ item.public_ip }}
    port=22
    state=started
  loop: "{{ ec2.instances }}"

- name: Adding Instance TAGs
  local_action: ec2_tag resource={{ item.id }} region={{ region }} profile={{ aws_profile }} state=present
  loop: "{{ ec2.instances }}"
  args:
    tags:
      Name: "{{ tag_name }}-{{ item.ami_launch_index|int+1 }}"
